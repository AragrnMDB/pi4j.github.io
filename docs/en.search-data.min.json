[{"id":0,"href":"/categories/","title":"Categories","parent":"Pi4J","content":""},{"id":1,"href":"/","title":"Pi4J","parent":"","content":""},{"id":2,"href":"/tags/","title":"Tags","parent":"Pi4J","content":""},{"id":3,"href":"/","title":"Welcome to Pi4J","parent":"Pi4J","content":" !! Looking for the V1-versions of Pi4J which are compatible with Java 8? !! Click here\u0026hellip;\nBrief History The Pi4J Project was started in 2012, the same year the Raspberry Pi was introduced as a tool to provide Java developers a simple and familiar object-oriented interface library to access the low-level I/O capabilities of the Raspberry Pi including GPIO, I2C, SPI, PWM and Serial communications.\nProject Mission/Goals The Pi4J Project\u0026rsquo;s mission is to provide a rich and powerful, yet simple to use, Java-friendly API library enabling programmatic access to the low-level hardware I/O capabilities of embedded platforms such as the Raspberry Pi.\n!!! As of Version 2.0, Pi4J will no longer include support for preriphery devices and add-on chipsets/boards as part of the core project. A new plugin model has been introduced in version 2.0 that should help enable third-party development and support third-party add-ons which may be developed and maintained indepdentantly from the core Pi4J project.\nProject Status Summary Pi4J V.2 is finally starting to come together and is almost ready for some real-world BETA testing. Significant progress has been made on the general architecture and primary user-facing interfaces. Pi4J V.2 is a complete re-write and does not maintain API compatibility with previous versions. It is not intended to be a drop-in replacement for previous versions of Pi4J. Version 2.0 is a completely new design bringing with it modern conventions, development practices, extensibility support and a simplified integration experience for Pi4J consumers.\nThe Pi4J V.2 source code is available in this GitHub repository: Pi4J V.2 GitHub Repository\ngit clone https://github.com/Pi4J/pi4j-v2 (Please note, this repository is only temporary and the sources will be moved to the main Pi4J repo. Thus any forks from this tempoarary repository will be broken after the move.)\n!! Pi4J V.2 is still considered EXPERIMENTAL at this point. While many parts of the project are working, there are still a number of areas that require further development and certain APIs are subject to change without notice. A significant portion of the code is presently undocumented and hardware integration testing is incomplete. It is not recommended to use Pi4J V.2 in any production workload at this time.\nFor a more detailed account of the project status, please see this page: Project Status.\n"}]
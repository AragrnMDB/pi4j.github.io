<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Building and running on Pi4J</title><link>https://pi4j.com/documentation/building/</link><description>Recent content in Building and running on Pi4J</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://pi4j.com/documentation/building/index.xml" rel="self" type="application/rss+xml"/><item><title>Build Java modules with Maven</title><link>https://pi4j.com/documentation/building/modules-maven/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/documentation/building/modules-maven/</guid><description>At this moment this is the only way to distribute a Pi4J V2 project.
Because the Pi4J V2 project follows the modular approach of Java, the functionality of the framework has been split into different modules, each with their own responsibility.
The easiest way to start a new project, is to copy one of the example projects which include a full Maven pom.xml-file with all the required steps and configurations to build the project with all its modules into the target/distribution directory.</description></item><item><title>Build as a FAT JAR with Maven</title><link>https://pi4j.com/documentation/building/fat-jar/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/documentation/building/fat-jar/</guid><description>Pi4J V2 projects as FAT JAR don&amp;rsquo;t work at this moment. This document is a description of the current problem related to the ongoing discussion on &amp;ldquo;Pros and Cons for the modular approach and what can be improved?&amp;quot;
About FAT JARs With Pi4J V1 you can create a so-called FAT JAR, which packages all the dependencies into one jar-file. That way it is very easy to build your project on one computer and distribute your application as a single file to one or more clients.</description></item></channel></rss>
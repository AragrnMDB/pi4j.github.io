<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Choosing an I/O Provider on Pi4J</title><link>https://pi4j.com/documentation/providers/</link><description>Recent content in Choosing an I/O Provider on Pi4J</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://pi4j.com/documentation/providers/index.xml" rel="self" type="application/rss+xml"/><item><title>LinuxFS</title><link>https://pi4j.com/documentation/providers/linuxfs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/documentation/providers/linuxfs/</guid><description>The current implementation of the LinuxFS plugin implements a file based I2C provider. The file based provider opens /dev/i2c-1 using a RandomAccessFile to perform I2C reads and writes.
Providers in the LinuxFS plugin:
linuxfs-i2c Under construction linuxfs-digital-input linuxfs-digital-output linuxfs-pwm To use the LinuxFS provider first add the proper dependency:
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.pi4j&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;pi4j-plugin-linuxfs&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${pi4j.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; And then one can get access to the provider as follows:</description></item><item><title>PiGpio</title><link>https://pi4j.com/documentation/providers/pigpio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://pi4j.com/documentation/providers/pigpio/</guid><description>The current implementation of the PiGpio exposes the GPIO functions available on the Raspberry Pi.
Providers in the PiGpio plugin:
pigpio-digital-input pigpio-digital-output pigpio-pwm pigpio-i2c pigpio-spi pigpio-serial To use the PiGpio provider first add the proper dependency:
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.pi4j&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;pi4j-plugin-raspberrypi&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${pi4j.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt;</description></item></channel></rss>
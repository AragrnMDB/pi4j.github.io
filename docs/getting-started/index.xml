<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Getting started with Pi4J on Pi4J</title><link>https://test.pi4j.com/getting-started/</link><description>Recent content in Getting started with Pi4J on Pi4J</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://test.pi4j.com/getting-started/index.xml" rel="self" type="application/rss+xml"/><item><title>Set up a new Raspberry Pi</title><link>https://test.pi4j.com/getting-started/set-up-a-new-raspberry-pi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://test.pi4j.com/getting-started/set-up-a-new-raspberry-pi/</guid><description>Introduction Step-by-step Material list SD card First start-up Install Pi4J Keep your Raspberry Pi up-to-date Update to the latest version Open a terminal and perform following commands
sudo apt update sudo apt full-upgrade Raspberry Pi OS is based on Debian - one of the largest Linux distrubutions. When running these commands regularly, you will keep your installation up to date for the particular major Raspberry Pi OS release you are using (e.</description></item><item><title>Java development with VSC</title><link>https://test.pi4j.com/getting-started/java-development-on-the-raspberry-pi-with-vsc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://test.pi4j.com/getting-started/java-development-on-the-raspberry-pi-with-vsc/</guid><description>Java on the Raspberry Pi To use Pi4J V2 you&amp;rsquo;ll need Java 11 or newer. Luckily this version is included in the current version of Raspbian OS. In the release notes of Raspbian you can see that the version of 2019-06-20 includes OpenJDK Java 11:
2019-06-20: Based on Debian Buster Oracle Java 7 and 8 replaced with OpenJDK 11 But you will need to keep in mind this version is only compatible with ARMv7 or higher and doesn&amp;rsquo;t support all Raspberry Pi board versions.</description></item><item><title>Minimal example application</title><link>https://test.pi4j.com/getting-started/minimal-example-application/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://test.pi4j.com/getting-started/minimal-example-application/</guid><description>!!! In the &amp;ldquo;pi4j-example-minimal&amp;rdquo; GitHub project you can find a project which contains the minimal code to control a digital input and output with Pi4J. The project is further described on this page. The application will toggle a a LED on/off and each time you press the button, the toggling speed increases. When you have pushed the button 5 times, the application stops.
Wiring This minimal example application uses this wiring:</description></item><item><title>Introduction to electronics</title><link>https://test.pi4j.com/getting-started/introduction-to-electronics-with-crowpi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://test.pi4j.com/getting-started/introduction-to-electronics-with-crowpi/</guid><description>For this example we are going to use a CrowPi, which is a starter kit build into a laptop-housing. Of course you can get any electronics starter kit for this purpose or buy some separate components. That&amp;rsquo;s the fun of electronics: components are inexpensive and easy to find on ebay or one of the many webshops.</description></item><item><title>User interface with JavaFX</title><link>https://test.pi4j.com/getting-started/user-interface-with-javafx/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://test.pi4j.com/getting-started/user-interface-with-javafx/</guid><description/></item><item><title>Game development with FXGL</title><link>https://test.pi4j.com/getting-started/game-development-with-fxgl/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://test.pi4j.com/getting-started/game-development-with-fxgl/</guid><description/></item></channel></rss>